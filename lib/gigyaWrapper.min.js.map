{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///gigyaWrapper.min.js","webpack:///webpack/bootstrap f9abee3255e60e645665","webpack:///./src/index.js","webpack:///./~/es6-object-assign/src/index.js","webpack:///./~/es6-promise/auto.js","webpack:///./~/es6-promise/dist/es6-promise.js","webpack:///./~/process/browser.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","polyfill","GigyaWrapper","options","apiKey","containerID","screenSet","lang","autoLogin","debug","https","gigya","noop","Error","_this","Promise","resolve","reject","error","script","document","createElement","type","async","text","src","getElementsByTagName","appendChild","window","onGigyaServiceReady","serviceName","showDebugUI","_this2","accounts","logout","callback","showScreenSet","startScreen","opts","screensetProps","assign","customLang","onBeforeScreenLoad","onAfterScreenLoad","onAfterSubmit","onBeforeSubmit","onFieldChanged","hideScreenSet","eventListeners","listeners","onLogin","onLogout","onConnectionAdded","onConnectionRemoved","onLinkback","addEventHandlers","_this3","include","arguments","undefined","getAccountInfo","response","errorCode","code","errorMessage","status","_this4","result","loggedIn","rawResponse","shareProps","provider","url","title","subtitle","description","imageurl","actionAttributes","popupHeight","popupWidth","providerKey","shortURLs","facebookDialogType","tags","userAction","socialize","UserAction","setLinkBack","setTitle","setSubtitle","setDescription","addActionLink","addMediaItem","href","cid","postBookmark","_this5","getSchema","_cb","_this6","policiesProps","sections","getPolicies","_this7","screenSetsProps","screenSetIDs","getScreenSets","details","errorDetails","firstSource","to","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","process","global","objectOrFunction","x","isFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useNextTick","nextTick","flush","useVertxTimer","vertxNext","useSetTimeout","useMutationObserver","iterations","observer","BrowserMutationObserver","node","createTextNode","observe","characterData","data","useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","globalSetTimeout","setTimeout","queue","arg","attemptVertx","vertx","runOnLoop","runOnContext","e","then","onFulfillment","onRejection","_arguments","parent","child","constructor","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","object","promise","_resolve","selfFulfillment","cannotReturnOwn","getThen","GET_THEN_ERROR","tryThen","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","fulfill","reason","_reject","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","then$$","publishRejection","_onerror","publish","PENDING","_subscribers","subscribers","settled","detail","ErrorObject","tryCatch","TRY_CATCH_ERROR","hasCallback","succeeded","failed","initializePromise","resolver","nextId","Enumerator","input","_instanceConstructor","isArray","_input","_remaining","Array","_enumerate","validationError","all","entries","race","_","needsResolver","needsNew","local","self","Function","P","promiseToString","toString","cast","_isArray","scheduleFlush","browserWindow","browserGlobal","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","Math","random","substring","_eachEntry","entry","resolve$$","_then","_settledAt","_willSettleAt","state","enumerator","_setScheduler","_setAsap","_asap","catch","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","concat","queueIndex","drainQueue","timeout","run","Item","array","args","push","apply","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask"],"mappings":"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","file":"gigyaWrapper.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gigyaWrapper\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gigyaWrapper\"] = factory();\n\telse\n\t\troot[\"gigyaWrapper\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gigyaWrapper\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gigyaWrapper\"] = factory();\n\telse\n\t\troot[\"gigyaWrapper\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t__webpack_require__(2);\n\t__webpack_require__(1).polyfill();\n\t\n\t/**\n\t * GigyaWrapper JS API wrapper class\n\t * @class GigyaWrapper\n\t */\n\t\n\tvar GigyaWrapper = function () {\n\t\n\t  /**\n\t   * GigyaWrapper constructor.\n\t   * @param {object} options - Object of options\n\t   * @param {string} options.apiKey - Gigya API key\n\t   * @param {string} [options.containerID='wrapper'] - DOM node to use for screensets.\n\t   * @param {string} [options.screenSet='Default-RegistrationLogin'] - Which screen set to use. Can be local on hosted in Gigya console.\n\t   * @param {string} [options.lang='en'] - Language of error messages.\n\t   * @param {boolean} [options.autoLogin=true] - Try to automatically login a user.\n\t   * @param {boolean} [options.debug=false] - Add a debug panel to the page.\n\t   * @constructs GigyaWrapper\n\t   */\n\t  function GigyaWrapper(options) {\n\t    _classCallCheck(this, GigyaWrapper);\n\t\n\t    /**\n\t     * API key for Gigya.\n\t     * @type {string}\n\t     * @member GigyaWrapper#apiKey\n\t     */\n\t    this.apiKey = options.apiKey;\n\t\n\t    /**\n\t     * DOM node to use for screensets\n\t     * @type {string}\n\t     * @member GigyaWrapper#containerID\n\t     */\n\t    this.containerID = options.containerID || 'wrapper';\n\t\n\t    /**\n\t     * Which screen set to use\n\t     * @type {string}\n\t     * @member GigyaWrapper#screenSet\n\t     */\n\t    this.screenSet = options.screenSet || 'Default-RegistrationLogin';\n\t\n\t    /**\n\t     * Language of error messages\n\t     * @type {string}\n\t     * @member GigyaWrapper#lang\n\t     */\n\t    this.lang = options.lang || 'en';\n\t\n\t    /**\n\t     * Try to automatically login a user\n\t     * @type {boolean}\n\t     * @member GigyaWrapper#autoLogin\n\t     */\n\t    this.autoLogin = options.autoLogin || true;\n\t\n\t    /**\n\t     * Add a debug panel to the page\n\t     * @type {boolean}\n\t     * @member GigyaWrapper#debug\n\t     */\n\t    this.debug = options.debug || false;\n\t\n\t    /**\n\t     * Load of http or https\n\t     * @type {boolean}\n\t     * @member GigyaWrapper#https\n\t     */\n\t    this.https = options.https || true;\n\t\n\t    /**\n\t     * The gigya library object\n\t     * @type {object}\n\t     * @member GigyaWrapper#gigya\n\t     */\n\t    this.gigya = false;\n\t\n\t    /**\n\t     * Empty noop function\n\t     * @type {function}\n\t     * @member GigyaWrapper#noop\n\t     */\n\t    this.noop = function () {};\n\t\n\t    if (!this.apiKey) {\n\t      throw new Error('No API key given');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Adds the script to the DOM and binds to the onGigyaServiceReady funciton\n\t   * @return {promise} resolves the gigya library object\n\t   */\n\t\n\t\n\t  _createClass(GigyaWrapper, [{\n\t    key: 'onLibraryReady',\n\t    value: function onLibraryReady() {\n\t      var _this = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t\n\t        if (_this.gigya) {\n\t          reject({ error: 'Gigya has already been loaded', gigya: _this.gigya });\n\t        }\n\t\n\t        var script = document.createElement('script');\n\t\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t        script.text = '{lang: \"' + _this.lang + '\", autoLogin: ' + _this.autoLogin;\n\t\n\t        if (_this.https) {\n\t          script.src = 'https://cdns.gigya.com/js/gigya.js?apiKey=' + _this.apiKey + '&lang=' + _this.lang;\n\t        } else {\n\t          script.src = 'http://cdn.gigya.com/js/gigya.js?apiKey=' + _this.apiKey + '&lang=' + _this.lang;\n\t        }\n\t\n\t        document.getElementsByTagName('head')[0].appendChild(script);\n\t\n\t        window.onGigyaServiceReady = function (serviceName) {\n\t          _this.gigya = window.gigya;\n\t\n\t          if (_this.debug) {\n\t            _this.gigya.showDebugUI();\n\t          }\n\t\n\t          resolve(_this.gigya);\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Logout a user.\n\t     * @see http://developers.gigya.com/display/GD/accounts.logout+JS\n\t     * @return {promise} Resolves an object with errorCode, errorMessage. On errorCode 0, the user was sucessfully logged out.\n\t     */\n\t\n\t  }, {\n\t    key: 'logout',\n\t    value: function logout() {\n\t      var _this2 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        _this2.gigya.accounts.logout({\n\t          callback: resolve\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Shortcut to show the login screen by using the showScreenSet function.\n\t     */\n\t\n\t  }, {\n\t    key: 'showLoginScreen',\n\t    value: function showLoginScreen() {\n\t      this.showScreenSet({\n\t        startScreen: 'gigya-login-screen'\n\t      });\n\t    }\n\t\n\t    /**\n\t     * @typedef CustomLang\n\t     * @type {object}\n\t     * @property {string} account_is_disabled - defaults to: Account is disabled\n\t     * @property {string} account_temporarily_locked_out - defaults to:  Account temporarily locked out\n\t     * @property {string} and - defaults to: and\n\t     * @property {string} available - defaults to: Available\n\t     * @property {string} checking - defaults to: Checking\n\t     * @property {string} choose_file - defaults to: Choose File\n\t     * @property {string} email_address_is_invalid - defaults to: E-mail address is invalid.\n\t     * @property {string} email_already_exists - defaults to: Email already exists\n\t     * @property {string} fair - defaults to: Fair\n\t     * @property {string} invalid_fieldname - defaults to: Invalid %fieldname\n\t     * @property {string} invalid_login_or_password - defaults to: Invalid login or password\n\t     * @property {string} invalid_username_or_password - defaults to: Invalid username or password\n\t     * @property {string} login_identifier_exists - defaults to: Login identifier exists\n\t     * @property {string} maximum_size_of_3mb. - defaults to: Maximum size of 3MB.\n\t     * @property {string} no_file_chosen - defaults to: No file chosen\n\t     * @property {string} not_available - defaults to: Not available\n\t     * @property {string} num_characters_total - defaults to: %num characters\n\t     * @property {string} num_of_the_following_groups - defaults to: %num of the following: An uppercase letter, a lowercase letter, a number, a special symbol\n\t     * @property {string} old_password_cannot_be_the_same_as_new_password - defaults to: Old password cannot be the same as New Password\n\t     * @property {string} password_does_not_meet_complexity_requirements - defaults to: Password does not meet complexity requirements\n\t     * @property {string} password_must_contain_at_least - defaults to: Password must contain at least\n\t     * @property {string} password_strength_colon - defaults to: Password strength:\n\t     * @property {string} passwords_do_not_match - defaults to: Passwords do not match\n\t     * @property {string} please_enter_a_valid_fieldname - defaults to: Please enter a valid %fieldname\n\t     * @property {string} please_enter_fieldname - defaults to: Please enter %fieldname\n\t     * @property {string} profilePhoto_fileSizeError - defaults to: Photo format: JPG/GIF/PNG. Size: up to 3MB.\n\t     * @property {string} sorry_we_are_not_able_to_process_your_registration - defaults to: Sorry, we are not able to process your registration\n\t     * @property {string} strong - defaults to: Strong\n\t     * @property {string} the_characters_you_entered_didn't_match_the_word_verification._please_try_again - defaults to: The characters you entered didn't match the word verification. Please try again\n\t     * @property {string} there_are_errors_in_your_form_please_try_again - defaults to: There are errors in your form, please try again\n\t     * @property {string} there_is_no_user_with_that_username_or_email - defaults to: There is no user with that username or email\n\t     * @property {string} these_passwords_do_not_match - defaults to: These passwords do not match\n\t     * @property {string} this_field_is_required - defaults to: This field is required\n\t     * @property {string} too_weak - defaults to: Too weak\n\t     * @property {string} unique_identifier_exists - defaults to: Unique identifier exists\n\t     * @property {string} username_already_exists - defaults to: Username already exists\n\t     * @property {string} very_strong - defaults to: Very strong\n\t     * @property {string} weak - defaults to: Weak\n\t     * @property {string} wrong_password - defaults to: Wrong password\n\t     * @property {string} your_age_does_not_meet_the_minimal_age_requirement - defaults to: Your age does not meet the minimal age requirement (13+) for this site\n\t     */\n\t\n\t    /**\n\t     * Shows a Gigya screen set. Either locally hosted or hosted in the Gigya console.\n\t     * @param {object} opts - Options object for showScreenSet function\n\t     * @param {string} [opts.screenSet=this.screenSet] - Screen set to use. Defaults to {@link GigyaWrapper#screenSet}\n\t     * @param {string} [opts.containerID=this.containerID] - DOM id of screen set container. Defaults to {@link GigyaWrapper#containerID}\n\t     * @param {string} [opts.startScreen=\"gigya-login-screen\"] - The screen to show.\n\t     * @param {CustomLang} [opts.customLang] - An object which overrules the error message for the selected language.\n\t     * @param {function} [opts.onBeforeScreenLoad] - This function is fired on before screen load.\n\t     * @param {function} [opts.onAfterScreenLoad] - This function is fired onAfterScreenLoad.\n\t     * @param {function} [opts.onAfterSubmit] - This function is fired onAfterSubmit.\n\t     * @param {function} [opts.onBeforeSubmit] - This function is fired onBeforeSubmit.\n\t     * @param {function} [opts.onFieldChanged] - This function is fired onFieldChanged.\n\t     * @see http://developers.gigya.com/display/GD/Customizing+Screen-Set+Error+Messages\n\t     * @see http://developers.gigya.com/display/GD/accounts.showScreenSet+JS\n\t     */\n\t\n\t  }, {\n\t    key: 'showScreenSet',\n\t    value: function showScreenSet(opts) {\n\t      var screensetProps = Object.assign({\n\t        screenSet: this.screenSet,\n\t        containerID: this.containerID,\n\t        startScreen: 'gigya-login-screen',\n\t        customLang: {},\n\t        onBeforeScreenLoad: this.noop,\n\t        onAfterScreenLoad: this.noop,\n\t        onAfterSubmit: this.noop,\n\t        onBeforeSubmit: this.noop,\n\t        onFieldChanged: this.noop\n\t      }, opts);\n\t\n\t      this.gigya.accounts.showScreenSet(screensetProps);\n\t    }\n\t\n\t    /**\n\t     * Hides a Gigya screen set. Either locally hosted or hosted in the Gigya console.\n\t     * @param {object} opts - Options object for showScreenSet function\n\t     * @param {string} [opts.screenSet=this.screenSet] - Screen set to use. Defaults to {@link GigyaWrapper#screenSet}\n\t     * @param {string} [opts.containerID=this.containerID] - DOM id of screen set container. Defaults to {@link GigyaWrapper#containerID}\n\t     * @see http://developers.gigya.com/display/GD/accounts.hideScreenSet+JS\n\t     */\n\t\n\t  }, {\n\t    key: 'hideScreenSet',\n\t    value: function hideScreenSet(opts) {\n\t      var screensetProps = Object.assign({\n\t        screenSet: this.screenSet,\n\t        containerID: this.containerID\n\t      }, opts);\n\t\n\t      this.gigya.accounts.hideScreenSet(screensetProps);\n\t    }\n\t\n\t    /**\n\t     * register to global Gigya events like user login or logout.\n\t     * @param {object} eventListeners - an object of functions that are fired upon global gigya events.\n\t     * @param {function} [opts.onLogin] - This function is fired onLogin.\n\t     * @param {function} [opts.onLogout] - This function is fired onLogout.\n\t     * @param {function} [opts.onConnectionAdded] - This function is fired onConnectionAdded.\n\t     * @param {function} [opts.onConnectionRemoved] - This function is fired onConnectionRemoved.\n\t     * @param {function} [opts.onLinkback] - This function is fired onLinkback.\n\t     * @see http://developers.gigya.com/display/GD/accounts.addEventHandlers+JS\n\t     */\n\t\n\t  }, {\n\t    key: 'registerEventListeners',\n\t    value: function registerEventListeners(eventListeners) {\n\t      var listeners = Object.assign({\n\t        onLogin: this.noop,\n\t        onLogout: this.noop,\n\t        onConnectionAdded: this.noop,\n\t        onConnectionRemoved: this.noop,\n\t        onLinkback: this.noop\n\t      }, eventListeners);\n\t\n\t      this.gigya.accounts.addEventHandlers(listeners);\n\t    }\n\t\n\t    /**\n\t     * Get Account info for user.\n\t     * @param {string} [include='profile,data'] - A comma-separated list of fields to include in the response.\n\t     * @return {promise} Resolves an object with errorCode, errorMessage and user account info based on the include parameter.\n\t     * @see http://developers.gigya.com/display/GD/accounts.getAccountInfo+JS\n\t     */\n\t\n\t  }, {\n\t    key: 'getAccountInfo',\n\t    value: function getAccountInfo() {\n\t      var _this3 = this;\n\t\n\t      var include = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'profile, data';\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        _this3.gigya.accounts.getAccountInfo({\n\t          include: include,\n\t          callback: function callback(response) {\n\t            if (response.errorCode === 0) {\n\t              resolve(response);\n\t            } else {\n\t              reject({ code: response.errorCode, error: response.errorMessage, status: response.status });\n\t            }\n\t          }\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Check if a user is logged in\n\t     * @return {promise} Resolves an object with errorCode, errorMessage and loggedIn true or false.\n\t     */\n\t\n\t  }, {\n\t    key: 'checkLoggedInStatus',\n\t    value: function checkLoggedInStatus() {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        _this4.gigya.accounts.getAccountInfo({\n\t          callback: function callback(response) {\n\t            var result = {\n\t              loggedIn: response.errorCode === 0,\n\t              errorCode: response.errorCode,\n\t              errorMessage: response.errorMessage,\n\t              rawResponse: response\n\t            };\n\t\n\t            resolve(result);\n\t          }\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Share to social provider\n\t     * @param {object} opts - Options object for the share function\n\t     * @param {string} [opts.provider='facebook'] - Which provider to share too. See gigya docs for possible providers.\n\t     * @param {string} opts.url - URL to share\n\t     * @param {string} opts.title - Share title\n\t     * @param {string} [opts.subtitle] - Subtitle for share (facebook only)\n\t     * @param {string} [opts.description] - Share description\n\t     * @param {string} [opts.imageurl] - Image to share\n\t     * @param {object} [opts.actionAttributes] - actionAttributes contain a JSON object comprised of a series of attribute keys (categories) with associated values. You can also use a generic \"tags\" key.\n\t     * @param {number} [opts.popupHeight=300] - popup height\n\t     * @param {number} [opts.popupWidth=400] - popup width\n\t     * @param {string} [opts.providerKey] - The provider-specific API Key. This parameter is used when calling this method for providers that require an API key.\n\t     * @param {string} [opts.shortURLs] - Using this parameter you may determine whether to use Gigya's URL shortening service for URLs passed in the status parameter. Options: 'never', 'always', 'whenRequired'.\n\t     * @param {string} [opts.facebookDialogType='feed'] - Applicable only for sharing through Facebook. This parameter determines which Facebook dialog will appear when clicking the share button.\n\t     * @param {string} [opts.tags] - A comma separated list of tags that are used to identify the share operation.\n\t     * @see http://developers.gigya.com/display/GD/socialize.postBookmark+JS\n\t     */\n\t\n\t  }, {\n\t    key: 'share',\n\t    value: function share(opts) {\n\t      var shareProps = Object.assign({\n\t        provider: 'facebook',\n\t        url: '',\n\t        title: '',\n\t        subtitle: '',\n\t        description: '',\n\t        imageurl: '',\n\t        actionAttributes: {},\n\t        popupHeight: 300,\n\t        popupWidth: 400,\n\t        providerKey: false,\n\t        shortURLs: 'never',\n\t        facebookDialogType: 'feed',\n\t        tags: false\n\t      }, opts);\n\t\n\t      var userAction = new this.gigya.socialize.UserAction();\n\t\n\t      userAction.setLinkBack(shareProps.url);\n\t      userAction.setTitle(shareProps.title);\n\t      userAction.setSubtitle(shareProps.subtitle);\n\t      userAction.setDescription(shareProps.description);\n\t      userAction.addActionLink(shareProps.title, shareProps.url);\n\t\n\t      userAction.addMediaItem({\n\t        type: 'image',\n\t        src: shareProps.imageurl,\n\t        href: shareProps.url\n\t      });\n\t\n\t      shareProps.userAction = userAction;\n\t      shareProps.cid = shareProps.provider + ' share';\n\t\n\t      this.gigya.socialize.postBookmark(shareProps);\n\t    }\n\t\n\t    /**\n\t     * Get the userSchema for the current {@link GigyaWrapper#apiKey}\n\t     * @return {promise} Resolves an object with errorCode, errorMessage and the schema info.\n\t     * @see http://developers.gigya.com/display/GD/accounts.getSchema+JS\n\t     */\n\t\n\t  }, {\n\t    key: 'getSchema',\n\t    value: function getSchema() {\n\t      var _this5 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        _this5.gigya.accounts.getSchema({\n\t          callback: function callback(response) {\n\t            return _this5._cb(resolve, reject, response);\n\t          }\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Get the Policies from the RaaS console interface\n\t     * @param {object} opts - Options object for the share function\n\t     * @param {string} [opts.sections='registration,gigyaPlugins,passwordComplexity,security'] - A comma-separated list specifying which sections of the policies to include in the response\n\t     * @return {promise} Resolves an object with errorCode, errorMessage and the policies info.\n\t     * @see http://developers.gigya.com/display/GD/accounts.getPolicies+JS\n\t     */\n\t\n\t  }, {\n\t    key: 'getPolicies',\n\t    value: function getPolicies(opts) {\n\t      var _this6 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var policiesProps = Object.assign({\n\t          sections: 'registration,gigyaPlugins,passwordComplexity,security',\n\t          callback: function callback(response) {\n\t            return _this6._cb(resolve, reject, response);\n\t          }\n\t        }, opts);\n\t\n\t        _this6.gigya.accounts.getPolicies(policiesProps);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Get the Screensets from the RaaS console interface\n\t     * @param {object} opts - Options object for the share function\n\t     * @param {string} [opts.screenSetIDs='Default-RegistrationLogin'] - Either a comma separated list or a JSON array of identifiers of the screen-sets to be retrieved.\n\t     * @param {string} [opts.include='Default-RegistrationLogin,html,css'] - A comma separated list of top level fields to include in the response. The default is: \"screenSetID,html,css\".\n\t     * @return {promise} Resolves an object with errorCode, errorMessage and the policies info.\n\t     * @see http://developers.gigya.com/display/GD/accounts.getScreenSets+JS\n\t     */\n\t\n\t  }, {\n\t    key: 'getScreenSets',\n\t    value: function getScreenSets(opts) {\n\t      var _this7 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var screenSetsProps = Object.assign({\n\t          screenSetIDs: 'Default-RegistrationLogin',\n\t          include: 'Default-RegistrationLogin,html,css',\n\t          callback: function callback(response) {\n\t            return _this7._cb(resolve, reject, response);\n\t          }\n\t        }, opts);\n\t\n\t        _this7.gigya.accounts.getScreenSets(screenSetsProps);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Private callback function for the promises used in this class.\n\t     * @param {function} resolve - Function to fire as resolve.\n\t     * @param {function} reject - Function to fire as reject.\n\t     * @param {object} response - Teh response to use for either resolve or reject.\n\t     * @return {promise} Resolves or rejects a response object.\n\t     */\n\t\n\t  }, {\n\t    key: '_cb',\n\t    value: function _cb(resolve, reject, response) {\n\t      if (response.status !== 'OK') {\n\t        reject({ code: response.errorCode, error: response.errorMessage, details: response.errorDetails, status: response.status });\n\t      }\n\t      resolve(response);\n\t    }\n\t  }]);\n\t\n\t  return GigyaWrapper;\n\t}();\n\t\n\texports.default = GigyaWrapper;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Code refactored from Mozilla Developer Network:\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\t */\n\t\n\t'use strict';\n\t\n\tfunction assign(target, firstSource) {\n\t  if (target === undefined || target === null) {\n\t    throw new TypeError('Cannot convert first argument to object');\n\t  }\n\t\n\t  var to = Object(target);\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var nextSource = arguments[i];\n\t    if (nextSource === undefined || nextSource === null) {\n\t      continue;\n\t    }\n\t\n\t    var keysArray = Object.keys(Object(nextSource));\n\t    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n\t      var nextKey = keysArray[nextIndex];\n\t      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\t      if (desc !== undefined && desc.enumerable) {\n\t        to[nextKey] = nextSource[nextKey];\n\t      }\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\tfunction polyfill() {\n\t  if (!Object.assign) {\n\t    Object.defineProperty(Object, 'assign', {\n\t      enumerable: false,\n\t      configurable: true,\n\t      writable: true,\n\t      value: assign\n\t    });\n\t  }\n\t}\n\t\n\tmodule.exports = {\n\t  assign: assign,\n\t  polyfill: polyfill\n\t};\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// This file can be required in Browserify and Node.js for automatic polyfill\n\t// To use it:  require('es6-promise/auto');\n\t'use strict';\n\tmodule.exports = __webpack_require__(3).polyfill();\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;/* WEBPACK VAR INJECTION */(function(process, global) {/*!\n\t * @overview es6-promise - a tiny implementation of Promises/A+.\n\t * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n\t * @license   Licensed under MIT license\n\t *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n\t * @version   4.0.5\n\t */\n\t\n\t(function (global, factory) {\n\t     true ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    (global.ES6Promise = factory());\n\t}(this, (function () { 'use strict';\n\t\n\tfunction objectOrFunction(x) {\n\t  return typeof x === 'function' || typeof x === 'object' && x !== null;\n\t}\n\t\n\tfunction isFunction(x) {\n\t  return typeof x === 'function';\n\t}\n\t\n\tvar _isArray = undefined;\n\tif (!Array.isArray) {\n\t  _isArray = function (x) {\n\t    return Object.prototype.toString.call(x) === '[object Array]';\n\t  };\n\t} else {\n\t  _isArray = Array.isArray;\n\t}\n\t\n\tvar isArray = _isArray;\n\t\n\tvar len = 0;\n\tvar vertxNext = undefined;\n\tvar customSchedulerFn = undefined;\n\t\n\tvar asap = function asap(callback, arg) {\n\t  queue[len] = callback;\n\t  queue[len + 1] = arg;\n\t  len += 2;\n\t  if (len === 2) {\n\t    // If len is 2, that means that we need to schedule an async flush.\n\t    // If additional callbacks are queued before the queue is flushed, they\n\t    // will be processed by this flush that we are scheduling.\n\t    if (customSchedulerFn) {\n\t      customSchedulerFn(flush);\n\t    } else {\n\t      scheduleFlush();\n\t    }\n\t  }\n\t};\n\t\n\tfunction setScheduler(scheduleFn) {\n\t  customSchedulerFn = scheduleFn;\n\t}\n\t\n\tfunction setAsap(asapFn) {\n\t  asap = asapFn;\n\t}\n\t\n\tvar browserWindow = typeof window !== 'undefined' ? window : undefined;\n\tvar browserGlobal = browserWindow || {};\n\tvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\n\tvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\t\n\t// test for web worker but not in IE10\n\tvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\t\n\t// node\n\tfunction useNextTick() {\n\t  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n\t  // see https://github.com/cujojs/when/issues/410 for details\n\t  return function () {\n\t    return process.nextTick(flush);\n\t  };\n\t}\n\t\n\t// vertx\n\tfunction useVertxTimer() {\n\t  if (typeof vertxNext !== 'undefined') {\n\t    return function () {\n\t      vertxNext(flush);\n\t    };\n\t  }\n\t\n\t  return useSetTimeout();\n\t}\n\t\n\tfunction useMutationObserver() {\n\t  var iterations = 0;\n\t  var observer = new BrowserMutationObserver(flush);\n\t  var node = document.createTextNode('');\n\t  observer.observe(node, { characterData: true });\n\t\n\t  return function () {\n\t    node.data = iterations = ++iterations % 2;\n\t  };\n\t}\n\t\n\t// web worker\n\tfunction useMessageChannel() {\n\t  var channel = new MessageChannel();\n\t  channel.port1.onmessage = flush;\n\t  return function () {\n\t    return channel.port2.postMessage(0);\n\t  };\n\t}\n\t\n\tfunction useSetTimeout() {\n\t  // Store setTimeout reference so es6-promise will be unaffected by\n\t  // other code modifying setTimeout (like sinon.useFakeTimers())\n\t  var globalSetTimeout = setTimeout;\n\t  return function () {\n\t    return globalSetTimeout(flush, 1);\n\t  };\n\t}\n\t\n\tvar queue = new Array(1000);\n\tfunction flush() {\n\t  for (var i = 0; i < len; i += 2) {\n\t    var callback = queue[i];\n\t    var arg = queue[i + 1];\n\t\n\t    callback(arg);\n\t\n\t    queue[i] = undefined;\n\t    queue[i + 1] = undefined;\n\t  }\n\t\n\t  len = 0;\n\t}\n\t\n\tfunction attemptVertx() {\n\t  try {\n\t    var r = require;\n\t    var vertx = __webpack_require__(5);\n\t    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n\t    return useVertxTimer();\n\t  } catch (e) {\n\t    return useSetTimeout();\n\t  }\n\t}\n\t\n\tvar scheduleFlush = undefined;\n\t// Decide what async method to use to triggering processing of queued callbacks:\n\tif (isNode) {\n\t  scheduleFlush = useNextTick();\n\t} else if (BrowserMutationObserver) {\n\t  scheduleFlush = useMutationObserver();\n\t} else if (isWorker) {\n\t  scheduleFlush = useMessageChannel();\n\t} else if (browserWindow === undefined && \"function\" === 'function') {\n\t  scheduleFlush = attemptVertx();\n\t} else {\n\t  scheduleFlush = useSetTimeout();\n\t}\n\t\n\tfunction then(onFulfillment, onRejection) {\n\t  var _arguments = arguments;\n\t\n\t  var parent = this;\n\t\n\t  var child = new this.constructor(noop);\n\t\n\t  if (child[PROMISE_ID] === undefined) {\n\t    makePromise(child);\n\t  }\n\t\n\t  var _state = parent._state;\n\t\n\t  if (_state) {\n\t    (function () {\n\t      var callback = _arguments[_state - 1];\n\t      asap(function () {\n\t        return invokeCallback(_state, child, callback, parent._result);\n\t      });\n\t    })();\n\t  } else {\n\t    subscribe(parent, child, onFulfillment, onRejection);\n\t  }\n\t\n\t  return child;\n\t}\n\t\n\t/**\n\t  `Promise.resolve` returns a promise that will become resolved with the\n\t  passed `value`. It is shorthand for the following:\n\t\n\t  ```javascript\n\t  let promise = new Promise(function(resolve, reject){\n\t    resolve(1);\n\t  });\n\t\n\t  promise.then(function(value){\n\t    // value === 1\n\t  });\n\t  ```\n\t\n\t  Instead of writing the above, your code now simply becomes the following:\n\t\n\t  ```javascript\n\t  let promise = Promise.resolve(1);\n\t\n\t  promise.then(function(value){\n\t    // value === 1\n\t  });\n\t  ```\n\t\n\t  @method resolve\n\t  @static\n\t  @param {Any} value value that the returned promise will be resolved with\n\t  Useful for tooling.\n\t  @return {Promise} a promise that will become fulfilled with the given\n\t  `value`\n\t*/\n\tfunction resolve(object) {\n\t  /*jshint validthis:true */\n\t  var Constructor = this;\n\t\n\t  if (object && typeof object === 'object' && object.constructor === Constructor) {\n\t    return object;\n\t  }\n\t\n\t  var promise = new Constructor(noop);\n\t  _resolve(promise, object);\n\t  return promise;\n\t}\n\t\n\tvar PROMISE_ID = Math.random().toString(36).substring(16);\n\t\n\tfunction noop() {}\n\t\n\tvar PENDING = void 0;\n\tvar FULFILLED = 1;\n\tvar REJECTED = 2;\n\t\n\tvar GET_THEN_ERROR = new ErrorObject();\n\t\n\tfunction selfFulfillment() {\n\t  return new TypeError(\"You cannot resolve a promise with itself\");\n\t}\n\t\n\tfunction cannotReturnOwn() {\n\t  return new TypeError('A promises callback cannot return that same promise.');\n\t}\n\t\n\tfunction getThen(promise) {\n\t  try {\n\t    return promise.then;\n\t  } catch (error) {\n\t    GET_THEN_ERROR.error = error;\n\t    return GET_THEN_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n\t  try {\n\t    then.call(value, fulfillmentHandler, rejectionHandler);\n\t  } catch (e) {\n\t    return e;\n\t  }\n\t}\n\t\n\tfunction handleForeignThenable(promise, thenable, then) {\n\t  asap(function (promise) {\n\t    var sealed = false;\n\t    var error = tryThen(then, thenable, function (value) {\n\t      if (sealed) {\n\t        return;\n\t      }\n\t      sealed = true;\n\t      if (thenable !== value) {\n\t        _resolve(promise, value);\n\t      } else {\n\t        fulfill(promise, value);\n\t      }\n\t    }, function (reason) {\n\t      if (sealed) {\n\t        return;\n\t      }\n\t      sealed = true;\n\t\n\t      _reject(promise, reason);\n\t    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\t\n\t    if (!sealed && error) {\n\t      sealed = true;\n\t      _reject(promise, error);\n\t    }\n\t  }, promise);\n\t}\n\t\n\tfunction handleOwnThenable(promise, thenable) {\n\t  if (thenable._state === FULFILLED) {\n\t    fulfill(promise, thenable._result);\n\t  } else if (thenable._state === REJECTED) {\n\t    _reject(promise, thenable._result);\n\t  } else {\n\t    subscribe(thenable, undefined, function (value) {\n\t      return _resolve(promise, value);\n\t    }, function (reason) {\n\t      return _reject(promise, reason);\n\t    });\n\t  }\n\t}\n\t\n\tfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n\t  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n\t    handleOwnThenable(promise, maybeThenable);\n\t  } else {\n\t    if (then$$ === GET_THEN_ERROR) {\n\t      _reject(promise, GET_THEN_ERROR.error);\n\t    } else if (then$$ === undefined) {\n\t      fulfill(promise, maybeThenable);\n\t    } else if (isFunction(then$$)) {\n\t      handleForeignThenable(promise, maybeThenable, then$$);\n\t    } else {\n\t      fulfill(promise, maybeThenable);\n\t    }\n\t  }\n\t}\n\t\n\tfunction _resolve(promise, value) {\n\t  if (promise === value) {\n\t    _reject(promise, selfFulfillment());\n\t  } else if (objectOrFunction(value)) {\n\t    handleMaybeThenable(promise, value, getThen(value));\n\t  } else {\n\t    fulfill(promise, value);\n\t  }\n\t}\n\t\n\tfunction publishRejection(promise) {\n\t  if (promise._onerror) {\n\t    promise._onerror(promise._result);\n\t  }\n\t\n\t  publish(promise);\n\t}\n\t\n\tfunction fulfill(promise, value) {\n\t  if (promise._state !== PENDING) {\n\t    return;\n\t  }\n\t\n\t  promise._result = value;\n\t  promise._state = FULFILLED;\n\t\n\t  if (promise._subscribers.length !== 0) {\n\t    asap(publish, promise);\n\t  }\n\t}\n\t\n\tfunction _reject(promise, reason) {\n\t  if (promise._state !== PENDING) {\n\t    return;\n\t  }\n\t  promise._state = REJECTED;\n\t  promise._result = reason;\n\t\n\t  asap(publishRejection, promise);\n\t}\n\t\n\tfunction subscribe(parent, child, onFulfillment, onRejection) {\n\t  var _subscribers = parent._subscribers;\n\t  var length = _subscribers.length;\n\t\n\t  parent._onerror = null;\n\t\n\t  _subscribers[length] = child;\n\t  _subscribers[length + FULFILLED] = onFulfillment;\n\t  _subscribers[length + REJECTED] = onRejection;\n\t\n\t  if (length === 0 && parent._state) {\n\t    asap(publish, parent);\n\t  }\n\t}\n\t\n\tfunction publish(promise) {\n\t  var subscribers = promise._subscribers;\n\t  var settled = promise._state;\n\t\n\t  if (subscribers.length === 0) {\n\t    return;\n\t  }\n\t\n\t  var child = undefined,\n\t      callback = undefined,\n\t      detail = promise._result;\n\t\n\t  for (var i = 0; i < subscribers.length; i += 3) {\n\t    child = subscribers[i];\n\t    callback = subscribers[i + settled];\n\t\n\t    if (child) {\n\t      invokeCallback(settled, child, callback, detail);\n\t    } else {\n\t      callback(detail);\n\t    }\n\t  }\n\t\n\t  promise._subscribers.length = 0;\n\t}\n\t\n\tfunction ErrorObject() {\n\t  this.error = null;\n\t}\n\t\n\tvar TRY_CATCH_ERROR = new ErrorObject();\n\t\n\tfunction tryCatch(callback, detail) {\n\t  try {\n\t    return callback(detail);\n\t  } catch (e) {\n\t    TRY_CATCH_ERROR.error = e;\n\t    return TRY_CATCH_ERROR;\n\t  }\n\t}\n\t\n\tfunction invokeCallback(settled, promise, callback, detail) {\n\t  var hasCallback = isFunction(callback),\n\t      value = undefined,\n\t      error = undefined,\n\t      succeeded = undefined,\n\t      failed = undefined;\n\t\n\t  if (hasCallback) {\n\t    value = tryCatch(callback, detail);\n\t\n\t    if (value === TRY_CATCH_ERROR) {\n\t      failed = true;\n\t      error = value.error;\n\t      value = null;\n\t    } else {\n\t      succeeded = true;\n\t    }\n\t\n\t    if (promise === value) {\n\t      _reject(promise, cannotReturnOwn());\n\t      return;\n\t    }\n\t  } else {\n\t    value = detail;\n\t    succeeded = true;\n\t  }\n\t\n\t  if (promise._state !== PENDING) {\n\t    // noop\n\t  } else if (hasCallback && succeeded) {\n\t      _resolve(promise, value);\n\t    } else if (failed) {\n\t      _reject(promise, error);\n\t    } else if (settled === FULFILLED) {\n\t      fulfill(promise, value);\n\t    } else if (settled === REJECTED) {\n\t      _reject(promise, value);\n\t    }\n\t}\n\t\n\tfunction initializePromise(promise, resolver) {\n\t  try {\n\t    resolver(function resolvePromise(value) {\n\t      _resolve(promise, value);\n\t    }, function rejectPromise(reason) {\n\t      _reject(promise, reason);\n\t    });\n\t  } catch (e) {\n\t    _reject(promise, e);\n\t  }\n\t}\n\t\n\tvar id = 0;\n\tfunction nextId() {\n\t  return id++;\n\t}\n\t\n\tfunction makePromise(promise) {\n\t  promise[PROMISE_ID] = id++;\n\t  promise._state = undefined;\n\t  promise._result = undefined;\n\t  promise._subscribers = [];\n\t}\n\t\n\tfunction Enumerator(Constructor, input) {\n\t  this._instanceConstructor = Constructor;\n\t  this.promise = new Constructor(noop);\n\t\n\t  if (!this.promise[PROMISE_ID]) {\n\t    makePromise(this.promise);\n\t  }\n\t\n\t  if (isArray(input)) {\n\t    this._input = input;\n\t    this.length = input.length;\n\t    this._remaining = input.length;\n\t\n\t    this._result = new Array(this.length);\n\t\n\t    if (this.length === 0) {\n\t      fulfill(this.promise, this._result);\n\t    } else {\n\t      this.length = this.length || 0;\n\t      this._enumerate();\n\t      if (this._remaining === 0) {\n\t        fulfill(this.promise, this._result);\n\t      }\n\t    }\n\t  } else {\n\t    _reject(this.promise, validationError());\n\t  }\n\t}\n\t\n\tfunction validationError() {\n\t  return new Error('Array Methods must be provided an Array');\n\t};\n\t\n\tEnumerator.prototype._enumerate = function () {\n\t  var length = this.length;\n\t  var _input = this._input;\n\t\n\t  for (var i = 0; this._state === PENDING && i < length; i++) {\n\t    this._eachEntry(_input[i], i);\n\t  }\n\t};\n\t\n\tEnumerator.prototype._eachEntry = function (entry, i) {\n\t  var c = this._instanceConstructor;\n\t  var resolve$$ = c.resolve;\n\t\n\t  if (resolve$$ === resolve) {\n\t    var _then = getThen(entry);\n\t\n\t    if (_then === then && entry._state !== PENDING) {\n\t      this._settledAt(entry._state, i, entry._result);\n\t    } else if (typeof _then !== 'function') {\n\t      this._remaining--;\n\t      this._result[i] = entry;\n\t    } else if (c === Promise) {\n\t      var promise = new c(noop);\n\t      handleMaybeThenable(promise, entry, _then);\n\t      this._willSettleAt(promise, i);\n\t    } else {\n\t      this._willSettleAt(new c(function (resolve$$) {\n\t        return resolve$$(entry);\n\t      }), i);\n\t    }\n\t  } else {\n\t    this._willSettleAt(resolve$$(entry), i);\n\t  }\n\t};\n\t\n\tEnumerator.prototype._settledAt = function (state, i, value) {\n\t  var promise = this.promise;\n\t\n\t  if (promise._state === PENDING) {\n\t    this._remaining--;\n\t\n\t    if (state === REJECTED) {\n\t      _reject(promise, value);\n\t    } else {\n\t      this._result[i] = value;\n\t    }\n\t  }\n\t\n\t  if (this._remaining === 0) {\n\t    fulfill(promise, this._result);\n\t  }\n\t};\n\t\n\tEnumerator.prototype._willSettleAt = function (promise, i) {\n\t  var enumerator = this;\n\t\n\t  subscribe(promise, undefined, function (value) {\n\t    return enumerator._settledAt(FULFILLED, i, value);\n\t  }, function (reason) {\n\t    return enumerator._settledAt(REJECTED, i, reason);\n\t  });\n\t};\n\t\n\t/**\n\t  `Promise.all` accepts an array of promises, and returns a new promise which\n\t  is fulfilled with an array of fulfillment values for the passed promises, or\n\t  rejected with the reason of the first passed promise to be rejected. It casts all\n\t  elements of the passed iterable to promises as it runs this algorithm.\n\t\n\t  Example:\n\t\n\t  ```javascript\n\t  let promise1 = resolve(1);\n\t  let promise2 = resolve(2);\n\t  let promise3 = resolve(3);\n\t  let promises = [ promise1, promise2, promise3 ];\n\t\n\t  Promise.all(promises).then(function(array){\n\t    // The array here would be [ 1, 2, 3 ];\n\t  });\n\t  ```\n\t\n\t  If any of the `promises` given to `all` are rejected, the first promise\n\t  that is rejected will be given as an argument to the returned promises's\n\t  rejection handler. For example:\n\t\n\t  Example:\n\t\n\t  ```javascript\n\t  let promise1 = resolve(1);\n\t  let promise2 = reject(new Error(\"2\"));\n\t  let promise3 = reject(new Error(\"3\"));\n\t  let promises = [ promise1, promise2, promise3 ];\n\t\n\t  Promise.all(promises).then(function(array){\n\t    // Code here never runs because there are rejected promises!\n\t  }, function(error) {\n\t    // error.message === \"2\"\n\t  });\n\t  ```\n\t\n\t  @method all\n\t  @static\n\t  @param {Array} entries array of promises\n\t  @param {String} label optional string for labeling the promise.\n\t  Useful for tooling.\n\t  @return {Promise} promise that is fulfilled when all `promises` have been\n\t  fulfilled, or rejected if any of them become rejected.\n\t  @static\n\t*/\n\tfunction all(entries) {\n\t  return new Enumerator(this, entries).promise;\n\t}\n\t\n\t/**\n\t  `Promise.race` returns a new promise which is settled in the same way as the\n\t  first passed promise to settle.\n\t\n\t  Example:\n\t\n\t  ```javascript\n\t  let promise1 = new Promise(function(resolve, reject){\n\t    setTimeout(function(){\n\t      resolve('promise 1');\n\t    }, 200);\n\t  });\n\t\n\t  let promise2 = new Promise(function(resolve, reject){\n\t    setTimeout(function(){\n\t      resolve('promise 2');\n\t    }, 100);\n\t  });\n\t\n\t  Promise.race([promise1, promise2]).then(function(result){\n\t    // result === 'promise 2' because it was resolved before promise1\n\t    // was resolved.\n\t  });\n\t  ```\n\t\n\t  `Promise.race` is deterministic in that only the state of the first\n\t  settled promise matters. For example, even if other promises given to the\n\t  `promises` array argument are resolved, but the first settled promise has\n\t  become rejected before the other promises became fulfilled, the returned\n\t  promise will become rejected:\n\t\n\t  ```javascript\n\t  let promise1 = new Promise(function(resolve, reject){\n\t    setTimeout(function(){\n\t      resolve('promise 1');\n\t    }, 200);\n\t  });\n\t\n\t  let promise2 = new Promise(function(resolve, reject){\n\t    setTimeout(function(){\n\t      reject(new Error('promise 2'));\n\t    }, 100);\n\t  });\n\t\n\t  Promise.race([promise1, promise2]).then(function(result){\n\t    // Code here never runs\n\t  }, function(reason){\n\t    // reason.message === 'promise 2' because promise 2 became rejected before\n\t    // promise 1 became fulfilled\n\t  });\n\t  ```\n\t\n\t  An example real-world use case is implementing timeouts:\n\t\n\t  ```javascript\n\t  Promise.race([ajax('foo.json'), timeout(5000)])\n\t  ```\n\t\n\t  @method race\n\t  @static\n\t  @param {Array} promises array of promises to observe\n\t  Useful for tooling.\n\t  @return {Promise} a promise which settles in the same way as the first passed\n\t  promise to settle.\n\t*/\n\tfunction race(entries) {\n\t  /*jshint validthis:true */\n\t  var Constructor = this;\n\t\n\t  if (!isArray(entries)) {\n\t    return new Constructor(function (_, reject) {\n\t      return reject(new TypeError('You must pass an array to race.'));\n\t    });\n\t  } else {\n\t    return new Constructor(function (resolve, reject) {\n\t      var length = entries.length;\n\t      for (var i = 0; i < length; i++) {\n\t        Constructor.resolve(entries[i]).then(resolve, reject);\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\t/**\n\t  `Promise.reject` returns a promise rejected with the passed `reason`.\n\t  It is shorthand for the following:\n\t\n\t  ```javascript\n\t  let promise = new Promise(function(resolve, reject){\n\t    reject(new Error('WHOOPS'));\n\t  });\n\t\n\t  promise.then(function(value){\n\t    // Code here doesn't run because the promise is rejected!\n\t  }, function(reason){\n\t    // reason.message === 'WHOOPS'\n\t  });\n\t  ```\n\t\n\t  Instead of writing the above, your code now simply becomes the following:\n\t\n\t  ```javascript\n\t  let promise = Promise.reject(new Error('WHOOPS'));\n\t\n\t  promise.then(function(value){\n\t    // Code here doesn't run because the promise is rejected!\n\t  }, function(reason){\n\t    // reason.message === 'WHOOPS'\n\t  });\n\t  ```\n\t\n\t  @method reject\n\t  @static\n\t  @param {Any} reason value that the returned promise will be rejected with.\n\t  Useful for tooling.\n\t  @return {Promise} a promise rejected with the given `reason`.\n\t*/\n\tfunction reject(reason) {\n\t  /*jshint validthis:true */\n\t  var Constructor = this;\n\t  var promise = new Constructor(noop);\n\t  _reject(promise, reason);\n\t  return promise;\n\t}\n\t\n\tfunction needsResolver() {\n\t  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n\t}\n\t\n\tfunction needsNew() {\n\t  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n\t}\n\t\n\t/**\n\t  Promise objects represent the eventual result of an asynchronous operation. The\n\t  primary way of interacting with a promise is through its `then` method, which\n\t  registers callbacks to receive either a promise's eventual value or the reason\n\t  why the promise cannot be fulfilled.\n\t\n\t  Terminology\n\t  -----------\n\t\n\t  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n\t  - `thenable` is an object or function that defines a `then` method.\n\t  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n\t  - `exception` is a value that is thrown using the throw statement.\n\t  - `reason` is a value that indicates why a promise was rejected.\n\t  - `settled` the final resting state of a promise, fulfilled or rejected.\n\t\n\t  A promise can be in one of three states: pending, fulfilled, or rejected.\n\t\n\t  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n\t  state.  Promises that are rejected have a rejection reason and are in the\n\t  rejected state.  A fulfillment value is never a thenable.\n\t\n\t  Promises can also be said to *resolve* a value.  If this value is also a\n\t  promise, then the original promise's settled state will match the value's\n\t  settled state.  So a promise that *resolves* a promise that rejects will\n\t  itself reject, and a promise that *resolves* a promise that fulfills will\n\t  itself fulfill.\n\t\n\t\n\t  Basic Usage:\n\t  ------------\n\t\n\t  ```js\n\t  let promise = new Promise(function(resolve, reject) {\n\t    // on success\n\t    resolve(value);\n\t\n\t    // on failure\n\t    reject(reason);\n\t  });\n\t\n\t  promise.then(function(value) {\n\t    // on fulfillment\n\t  }, function(reason) {\n\t    // on rejection\n\t  });\n\t  ```\n\t\n\t  Advanced Usage:\n\t  ---------------\n\t\n\t  Promises shine when abstracting away asynchronous interactions such as\n\t  `XMLHttpRequest`s.\n\t\n\t  ```js\n\t  function getJSON(url) {\n\t    return new Promise(function(resolve, reject){\n\t      let xhr = new XMLHttpRequest();\n\t\n\t      xhr.open('GET', url);\n\t      xhr.onreadystatechange = handler;\n\t      xhr.responseType = 'json';\n\t      xhr.setRequestHeader('Accept', 'application/json');\n\t      xhr.send();\n\t\n\t      function handler() {\n\t        if (this.readyState === this.DONE) {\n\t          if (this.status === 200) {\n\t            resolve(this.response);\n\t          } else {\n\t            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n\t          }\n\t        }\n\t      };\n\t    });\n\t  }\n\t\n\t  getJSON('/posts.json').then(function(json) {\n\t    // on fulfillment\n\t  }, function(reason) {\n\t    // on rejection\n\t  });\n\t  ```\n\t\n\t  Unlike callbacks, promises are great composable primitives.\n\t\n\t  ```js\n\t  Promise.all([\n\t    getJSON('/posts'),\n\t    getJSON('/comments')\n\t  ]).then(function(values){\n\t    values[0] // => postsJSON\n\t    values[1] // => commentsJSON\n\t\n\t    return values;\n\t  });\n\t  ```\n\t\n\t  @class Promise\n\t  @param {function} resolver\n\t  Useful for tooling.\n\t  @constructor\n\t*/\n\tfunction Promise(resolver) {\n\t  this[PROMISE_ID] = nextId();\n\t  this._result = this._state = undefined;\n\t  this._subscribers = [];\n\t\n\t  if (noop !== resolver) {\n\t    typeof resolver !== 'function' && needsResolver();\n\t    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n\t  }\n\t}\n\t\n\tPromise.all = all;\n\tPromise.race = race;\n\tPromise.resolve = resolve;\n\tPromise.reject = reject;\n\tPromise._setScheduler = setScheduler;\n\tPromise._setAsap = setAsap;\n\tPromise._asap = asap;\n\t\n\tPromise.prototype = {\n\t  constructor: Promise,\n\t\n\t  /**\n\t    The primary way of interacting with a promise is through its `then` method,\n\t    which registers callbacks to receive either a promise's eventual value or the\n\t    reason why the promise cannot be fulfilled.\n\t  \n\t    ```js\n\t    findUser().then(function(user){\n\t      // user is available\n\t    }, function(reason){\n\t      // user is unavailable, and you are given the reason why\n\t    });\n\t    ```\n\t  \n\t    Chaining\n\t    --------\n\t  \n\t    The return value of `then` is itself a promise.  This second, 'downstream'\n\t    promise is resolved with the return value of the first promise's fulfillment\n\t    or rejection handler, or rejected if the handler throws an exception.\n\t  \n\t    ```js\n\t    findUser().then(function (user) {\n\t      return user.name;\n\t    }, function (reason) {\n\t      return 'default name';\n\t    }).then(function (userName) {\n\t      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n\t      // will be `'default name'`\n\t    });\n\t  \n\t    findUser().then(function (user) {\n\t      throw new Error('Found user, but still unhappy');\n\t    }, function (reason) {\n\t      throw new Error('`findUser` rejected and we're unhappy');\n\t    }).then(function (value) {\n\t      // never reached\n\t    }, function (reason) {\n\t      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n\t      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n\t    });\n\t    ```\n\t    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\t  \n\t    ```js\n\t    findUser().then(function (user) {\n\t      throw new PedagogicalException('Upstream error');\n\t    }).then(function (value) {\n\t      // never reached\n\t    }).then(function (value) {\n\t      // never reached\n\t    }, function (reason) {\n\t      // The `PedgagocialException` is propagated all the way down to here\n\t    });\n\t    ```\n\t  \n\t    Assimilation\n\t    ------------\n\t  \n\t    Sometimes the value you want to propagate to a downstream promise can only be\n\t    retrieved asynchronously. This can be achieved by returning a promise in the\n\t    fulfillment or rejection handler. The downstream promise will then be pending\n\t    until the returned promise is settled. This is called *assimilation*.\n\t  \n\t    ```js\n\t    findUser().then(function (user) {\n\t      return findCommentsByAuthor(user);\n\t    }).then(function (comments) {\n\t      // The user's comments are now available\n\t    });\n\t    ```\n\t  \n\t    If the assimliated promise rejects, then the downstream promise will also reject.\n\t  \n\t    ```js\n\t    findUser().then(function (user) {\n\t      return findCommentsByAuthor(user);\n\t    }).then(function (comments) {\n\t      // If `findCommentsByAuthor` fulfills, we'll have the value here\n\t    }, function (reason) {\n\t      // If `findCommentsByAuthor` rejects, we'll have the reason here\n\t    });\n\t    ```\n\t  \n\t    Simple Example\n\t    --------------\n\t  \n\t    Synchronous Example\n\t  \n\t    ```javascript\n\t    let result;\n\t  \n\t    try {\n\t      result = findResult();\n\t      // success\n\t    } catch(reason) {\n\t      // failure\n\t    }\n\t    ```\n\t  \n\t    Errback Example\n\t  \n\t    ```js\n\t    findResult(function(result, err){\n\t      if (err) {\n\t        // failure\n\t      } else {\n\t        // success\n\t      }\n\t    });\n\t    ```\n\t  \n\t    Promise Example;\n\t  \n\t    ```javascript\n\t    findResult().then(function(result){\n\t      // success\n\t    }, function(reason){\n\t      // failure\n\t    });\n\t    ```\n\t  \n\t    Advanced Example\n\t    --------------\n\t  \n\t    Synchronous Example\n\t  \n\t    ```javascript\n\t    let author, books;\n\t  \n\t    try {\n\t      author = findAuthor();\n\t      books  = findBooksByAuthor(author);\n\t      // success\n\t    } catch(reason) {\n\t      // failure\n\t    }\n\t    ```\n\t  \n\t    Errback Example\n\t  \n\t    ```js\n\t  \n\t    function foundBooks(books) {\n\t  \n\t    }\n\t  \n\t    function failure(reason) {\n\t  \n\t    }\n\t  \n\t    findAuthor(function(author, err){\n\t      if (err) {\n\t        failure(err);\n\t        // failure\n\t      } else {\n\t        try {\n\t          findBoooksByAuthor(author, function(books, err) {\n\t            if (err) {\n\t              failure(err);\n\t            } else {\n\t              try {\n\t                foundBooks(books);\n\t              } catch(reason) {\n\t                failure(reason);\n\t              }\n\t            }\n\t          });\n\t        } catch(error) {\n\t          failure(err);\n\t        }\n\t        // success\n\t      }\n\t    });\n\t    ```\n\t  \n\t    Promise Example;\n\t  \n\t    ```javascript\n\t    findAuthor().\n\t      then(findBooksByAuthor).\n\t      then(function(books){\n\t        // found books\n\t    }).catch(function(reason){\n\t      // something went wrong\n\t    });\n\t    ```\n\t  \n\t    @method then\n\t    @param {Function} onFulfilled\n\t    @param {Function} onRejected\n\t    Useful for tooling.\n\t    @return {Promise}\n\t  */\n\t  then: then,\n\t\n\t  /**\n\t    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n\t    as the catch block of a try/catch statement.\n\t  \n\t    ```js\n\t    function findAuthor(){\n\t      throw new Error('couldn't find that author');\n\t    }\n\t  \n\t    // synchronous\n\t    try {\n\t      findAuthor();\n\t    } catch(reason) {\n\t      // something went wrong\n\t    }\n\t  \n\t    // async with promises\n\t    findAuthor().catch(function(reason){\n\t      // something went wrong\n\t    });\n\t    ```\n\t  \n\t    @method catch\n\t    @param {Function} onRejection\n\t    Useful for tooling.\n\t    @return {Promise}\n\t  */\n\t  'catch': function _catch(onRejection) {\n\t    return this.then(null, onRejection);\n\t  }\n\t};\n\t\n\tfunction polyfill() {\n\t    var local = undefined;\n\t\n\t    if (typeof global !== 'undefined') {\n\t        local = global;\n\t    } else if (typeof self !== 'undefined') {\n\t        local = self;\n\t    } else {\n\t        try {\n\t            local = Function('return this')();\n\t        } catch (e) {\n\t            throw new Error('polyfill failed because global object is unavailable in this environment');\n\t        }\n\t    }\n\t\n\t    var P = local.Promise;\n\t\n\t    if (P) {\n\t        var promiseToString = null;\n\t        try {\n\t            promiseToString = Object.prototype.toString.call(P.resolve());\n\t        } catch (e) {\n\t            // silently ignored\n\t        }\n\t\n\t        if (promiseToString === '[object Promise]' && !P.cast) {\n\t            return;\n\t        }\n\t    }\n\t\n\t    local.Promise = Promise;\n\t}\n\t\n\t// Strange compat..\n\tPromise.polyfill = polyfill;\n\tPromise.Promise = Promise;\n\t\n\treturn Promise;\n\t\n\t})));\n\t//# sourceMappingURL=es6-promise.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), (function() { return this; }())))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** gigyaWrapper.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f9abee3255e60e645665\n **/","require( 'es6-promise/auto' );\nrequire( 'es6-object-assign' ).polyfill();\n\n/**\n * GigyaWrapper JS API wrapper class\n * @class GigyaWrapper\n */\nexport default class GigyaWrapper{\n\n  /**\n   * GigyaWrapper constructor.\n   * @param {object} options - Object of options\n   * @param {string} options.apiKey - Gigya API key\n   * @param {string} [options.containerID='wrapper'] - DOM node to use for screensets.\n   * @param {string} [options.screenSet='Default-RegistrationLogin'] - Which screen set to use. Can be local on hosted in Gigya console.\n   * @param {string} [options.lang='en'] - Language of error messages.\n   * @param {boolean} [options.autoLogin=true] - Try to automatically login a user.\n   * @param {boolean} [options.debug=false] - Add a debug panel to the page.\n   * @constructs GigyaWrapper\n   */\n  constructor( options ){\n    /**\n     * API key for Gigya.\n     * @type {string}\n     * @member GigyaWrapper#apiKey\n     */\n    this.apiKey = options.apiKey;\n\n    /**\n     * DOM node to use for screensets\n     * @type {string}\n     * @member GigyaWrapper#containerID\n     */\n    this.containerID = options.containerID || 'wrapper';\n\n    /**\n     * Which screen set to use\n     * @type {string}\n     * @member GigyaWrapper#screenSet\n     */\n    this.screenSet = options.screenSet || 'Default-RegistrationLogin';\n\n    /**\n     * Language of error messages\n     * @type {string}\n     * @member GigyaWrapper#lang\n     */\n    this.lang = options.lang || 'en';\n\n    /**\n     * Try to automatically login a user\n     * @type {boolean}\n     * @member GigyaWrapper#autoLogin\n     */\n    this.autoLogin = options.autoLogin || true;\n\n    /**\n     * Add a debug panel to the page\n     * @type {boolean}\n     * @member GigyaWrapper#debug\n     */\n    this.debug = options.debug || false;\n\n    /**\n     * Load of http or https\n     * @type {boolean}\n     * @member GigyaWrapper#https\n     */\n    this.https = options.https || true;\n\n    /**\n     * The gigya library object\n     * @type {object}\n     * @member GigyaWrapper#gigya\n     */\n    this.gigya = false;\n\n    /**\n     * Empty noop function\n     * @type {function}\n     * @member GigyaWrapper#noop\n     */\n    this.noop = ()=>{};\n\n    if( !this.apiKey ){\n      throw new Error( 'No API key given' );\n    }\n  }\n\n  /**\n   * Adds the script to the DOM and binds to the onGigyaServiceReady funciton\n   * @return {promise} resolves the gigya library object\n   */\n  onLibraryReady(){\n    return new Promise( ( resolve, reject )=>{\n\n      if( this.gigya ){\n        reject( { error: 'Gigya has already been loaded', gigya: this.gigya } );\n      }\n\n      let script = document.createElement( 'script' );\n\n      script.type = 'text/javascript';\n      script.async = true;\n      script.text = `{lang: \"${this.lang}\", autoLogin: ${this.autoLogin}`;\n\n      if( this.https ){\n        script.src = `https://cdns.gigya.com/js/gigya.js?apiKey=${this.apiKey}&lang=${this.lang}`;\n      } else {\n        script.src = `http://cdn.gigya.com/js/gigya.js?apiKey=${this.apiKey}&lang=${this.lang}`;\n      }\n\n      document.getElementsByTagName( 'head' )[ 0 ].appendChild( script );\n\n      window.onGigyaServiceReady = ( serviceName )=>{\n        this.gigya = window.gigya;\n\n        if( this.debug ){\n          this.gigya.showDebugUI();\n        }\n\n        resolve( this.gigya );\n      };\n    } );\n  }\n\n  /**\n   * Logout a user.\n   * @see http://developers.gigya.com/display/GD/accounts.logout+JS\n   * @return {promise} Resolves an object with errorCode, errorMessage. On errorCode 0, the user was sucessfully logged out.\n   */\n  logout(){\n    return new Promise( ( resolve, reject )=>{\n      this.gigya.accounts.logout( {\n        callback: resolve\n      } );\n    } );\n  }\n\n  /**\n   * Shortcut to show the login screen by using the showScreenSet function.\n   */\n  showLoginScreen(){\n    this.showScreenSet( {\n      startScreen: 'gigya-login-screen'\n    } );\n  }\n\n  /**\n   * @typedef CustomLang\n   * @type {object}\n   * @property {string} account_is_disabled - defaults to: Account is disabled\n   * @property {string} account_temporarily_locked_out - defaults to:  Account temporarily locked out\n   * @property {string} and - defaults to: and\n   * @property {string} available - defaults to: Available\n   * @property {string} checking - defaults to: Checking\n   * @property {string} choose_file - defaults to: Choose File\n   * @property {string} email_address_is_invalid - defaults to: E-mail address is invalid.\n   * @property {string} email_already_exists - defaults to: Email already exists\n   * @property {string} fair - defaults to: Fair\n   * @property {string} invalid_fieldname - defaults to: Invalid %fieldname\n   * @property {string} invalid_login_or_password - defaults to: Invalid login or password\n   * @property {string} invalid_username_or_password - defaults to: Invalid username or password\n   * @property {string} login_identifier_exists - defaults to: Login identifier exists\n   * @property {string} maximum_size_of_3mb. - defaults to: Maximum size of 3MB.\n   * @property {string} no_file_chosen - defaults to: No file chosen\n   * @property {string} not_available - defaults to: Not available\n   * @property {string} num_characters_total - defaults to: %num characters\n   * @property {string} num_of_the_following_groups - defaults to: %num of the following: An uppercase letter, a lowercase letter, a number, a special symbol\n   * @property {string} old_password_cannot_be_the_same_as_new_password - defaults to: Old password cannot be the same as New Password\n   * @property {string} password_does_not_meet_complexity_requirements - defaults to: Password does not meet complexity requirements\n   * @property {string} password_must_contain_at_least - defaults to: Password must contain at least\n   * @property {string} password_strength_colon - defaults to: Password strength:\n   * @property {string} passwords_do_not_match - defaults to: Passwords do not match\n   * @property {string} please_enter_a_valid_fieldname - defaults to: Please enter a valid %fieldname\n   * @property {string} please_enter_fieldname - defaults to: Please enter %fieldname\n   * @property {string} profilePhoto_fileSizeError - defaults to: Photo format: JPG/GIF/PNG. Size: up to 3MB.\n   * @property {string} sorry_we_are_not_able_to_process_your_registration - defaults to: Sorry, we are not able to process your registration\n   * @property {string} strong - defaults to: Strong\n   * @property {string} the_characters_you_entered_didn't_match_the_word_verification._please_try_again - defaults to: The characters you entered didn't match the word verification. Please try again\n   * @property {string} there_are_errors_in_your_form_please_try_again - defaults to: There are errors in your form, please try again\n   * @property {string} there_is_no_user_with_that_username_or_email - defaults to: There is no user with that username or email\n   * @property {string} these_passwords_do_not_match - defaults to: These passwords do not match\n   * @property {string} this_field_is_required - defaults to: This field is required\n   * @property {string} too_weak - defaults to: Too weak\n   * @property {string} unique_identifier_exists - defaults to: Unique identifier exists\n   * @property {string} username_already_exists - defaults to: Username already exists\n   * @property {string} very_strong - defaults to: Very strong\n   * @property {string} weak - defaults to: Weak\n   * @property {string} wrong_password - defaults to: Wrong password\n   * @property {string} your_age_does_not_meet_the_minimal_age_requirement - defaults to: Your age does not meet the minimal age requirement (13+) for this site\n   */\n\n  /**\n   * Shows a Gigya screen set. Either locally hosted or hosted in the Gigya console.\n   * @param {object} opts - Options object for showScreenSet function\n   * @param {string} [opts.screenSet=this.screenSet] - Screen set to use. Defaults to {@link GigyaWrapper#screenSet}\n   * @param {string} [opts.containerID=this.containerID] - DOM id of screen set container. Defaults to {@link GigyaWrapper#containerID}\n   * @param {string} [opts.startScreen=\"gigya-login-screen\"] - The screen to show.\n   * @param {CustomLang} [opts.customLang] - An object which overrules the error message for the selected language.\n   * @param {function} [opts.onBeforeScreenLoad] - This function is fired on before screen load.\n   * @param {function} [opts.onAfterScreenLoad] - This function is fired onAfterScreenLoad.\n   * @param {function} [opts.onAfterSubmit] - This function is fired onAfterSubmit.\n   * @param {function} [opts.onBeforeSubmit] - This function is fired onBeforeSubmit.\n   * @param {function} [opts.onFieldChanged] - This function is fired onFieldChanged.\n   * @see http://developers.gigya.com/display/GD/Customizing+Screen-Set+Error+Messages\n   * @see http://developers.gigya.com/display/GD/accounts.showScreenSet+JS\n   */\n  showScreenSet( opts ){\n    let screensetProps = Object.assign( {\n      screenSet: this.screenSet,\n      containerID: this.containerID,\n      startScreen: 'gigya-login-screen',\n      customLang: {},\n      onBeforeScreenLoad: this.noop,\n      onAfterScreenLoad: this.noop,\n      onAfterSubmit: this.noop,\n      onBeforeSubmit: this.noop,\n      onFieldChanged: this.noop\n    }, opts );\n\n    this.gigya.accounts.showScreenSet( screensetProps );\n  }\n\n  /**\n   * Hides a Gigya screen set. Either locally hosted or hosted in the Gigya console.\n   * @param {object} opts - Options object for showScreenSet function\n   * @param {string} [opts.screenSet=this.screenSet] - Screen set to use. Defaults to {@link GigyaWrapper#screenSet}\n   * @param {string} [opts.containerID=this.containerID] - DOM id of screen set container. Defaults to {@link GigyaWrapper#containerID}\n   * @see http://developers.gigya.com/display/GD/accounts.hideScreenSet+JS\n   */\n  hideScreenSet( opts ){\n    let screensetProps = Object.assign( {\n      screenSet: this.screenSet,\n      containerID: this.containerID\n    }, opts );\n\n    this.gigya.accounts.hideScreenSet( screensetProps );\n  }\n\n  /**\n   * register to global Gigya events like user login or logout.\n   * @param {object} eventListeners - an object of functions that are fired upon global gigya events.\n   * @param {function} [opts.onLogin] - This function is fired onLogin.\n   * @param {function} [opts.onLogout] - This function is fired onLogout.\n   * @param {function} [opts.onConnectionAdded] - This function is fired onConnectionAdded.\n   * @param {function} [opts.onConnectionRemoved] - This function is fired onConnectionRemoved.\n   * @param {function} [opts.onLinkback] - This function is fired onLinkback.\n   * @see http://developers.gigya.com/display/GD/accounts.addEventHandlers+JS\n   */\n  registerEventListeners( eventListeners ){\n    let listeners = Object.assign( {\n      onLogin: this.noop,\n      onLogout: this.noop,\n      onConnectionAdded: this.noop,\n      onConnectionRemoved: this.noop,\n      onLinkback: this.noop\n    }, eventListeners );\n\n    this.gigya.accounts.addEventHandlers( listeners );\n  }\n\n  /**\n   * Get Account info for user.\n   * @param {string} [include='profile,data'] - A comma-separated list of fields to include in the response.\n   * @return {promise} Resolves an object with errorCode, errorMessage and user account info based on the include parameter.\n   * @see http://developers.gigya.com/display/GD/accounts.getAccountInfo+JS\n   */\n  getAccountInfo( include = 'profile, data' ){\n    return new Promise( ( resolve, reject )=>{\n      this.gigya.accounts.getAccountInfo( {\n        include: include,\n        callback: ( response )=>{\n          if( response.errorCode === 0 ){\n            resolve( response );\n          } else {\n            reject( { code: response.errorCode, error: response.errorMessage, status: response.status } );\n          }\n        }\n      } );\n    } );\n  }\n\n  /**\n   * Check if a user is logged in\n   * @return {promise} Resolves an object with errorCode, errorMessage and loggedIn true or false.\n   */\n  checkLoggedInStatus(){\n    return new Promise( ( resolve, reject )=>{\n      this.gigya.accounts.getAccountInfo( {\n        callback: ( response )=>{\n          let result = {\n            loggedIn: ( response.errorCode === 0 ),\n            errorCode: response.errorCode,\n            errorMessage: response.errorMessage,\n            rawResponse: response\n          };\n\n          resolve( result );\n        }\n      } );\n    } );\n  }\n\n  /**\n   * Share to social provider\n   * @param {object} opts - Options object for the share function\n   * @param {string} [opts.provider='facebook'] - Which provider to share too. See gigya docs for possible providers.\n   * @param {string} opts.url - URL to share\n   * @param {string} opts.title - Share title\n   * @param {string} [opts.subtitle] - Subtitle for share (facebook only)\n   * @param {string} [opts.description] - Share description\n   * @param {string} [opts.imageurl] - Image to share\n   * @param {object} [opts.actionAttributes] - actionAttributes contain a JSON object comprised of a series of attribute keys (categories) with associated values. You can also use a generic \"tags\" key.\n   * @param {number} [opts.popupHeight=300] - popup height\n   * @param {number} [opts.popupWidth=400] - popup width\n   * @param {string} [opts.providerKey] - The provider-specific API Key. This parameter is used when calling this method for providers that require an API key.\n   * @param {string} [opts.shortURLs] - Using this parameter you may determine whether to use Gigya's URL shortening service for URLs passed in the status parameter. Options: 'never', 'always', 'whenRequired'.\n   * @param {string} [opts.facebookDialogType='feed'] - Applicable only for sharing through Facebook. This parameter determines which Facebook dialog will appear when clicking the share button.\n   * @param {string} [opts.tags] - A comma separated list of tags that are used to identify the share operation.\n   * @see http://developers.gigya.com/display/GD/socialize.postBookmark+JS\n   */\n  share( opts ){\n    let shareProps = Object.assign( {\n      provider: 'facebook',\n      url: '',\n      title: '',\n      subtitle: '',\n      description: '',\n      imageurl: '',\n      actionAttributes: {},\n      popupHeight: 300,\n      popupWidth: 400,\n      providerKey: false,\n      shortURLs: 'never',\n      facebookDialogType: 'feed',\n      tags: false\n    }, opts );\n\n    let userAction = new this.gigya.socialize.UserAction();\n\n    userAction.setLinkBack( shareProps.url );\n    userAction.setTitle( shareProps.title );\n    userAction.setSubtitle( shareProps.subtitle );\n    userAction.setDescription( shareProps.description );\n    userAction.addActionLink( shareProps.title, shareProps.url );\n\n    userAction.addMediaItem( {\n      type: 'image',\n      src: shareProps.imageurl,\n      href: shareProps.url\n    } );\n\n    shareProps.userAction = userAction;\n    shareProps.cid = `${shareProps.provider} share`;\n\n    this.gigya.socialize.postBookmark( shareProps );\n  }\n\n  /**\n   * Get the userSchema for the current {@link GigyaWrapper#apiKey}\n   * @return {promise} Resolves an object with errorCode, errorMessage and the schema info.\n   * @see http://developers.gigya.com/display/GD/accounts.getSchema+JS\n   */\n  getSchema(){\n    return new Promise( ( resolve, reject )=>{\n      this.gigya.accounts.getSchema( {\n        callback: ( response )=> this._cb( resolve, reject, response )\n      } );\n    } );\n  }\n\n  /**\n   * Get the Policies from the RaaS console interface\n   * @param {object} opts - Options object for the share function\n   * @param {string} [opts.sections='registration,gigyaPlugins,passwordComplexity,security'] - A comma-separated list specifying which sections of the policies to include in the response\n   * @return {promise} Resolves an object with errorCode, errorMessage and the policies info.\n   * @see http://developers.gigya.com/display/GD/accounts.getPolicies+JS\n   */\n  getPolicies( opts ){\n    return new Promise( ( resolve, reject )=>{\n      let policiesProps = Object.assign( {\n        sections: 'registration,gigyaPlugins,passwordComplexity,security',\n        callback: ( response )=> this._cb( resolve, reject, response )\n      }, opts );\n\n      this.gigya.accounts.getPolicies( policiesProps );\n    } );\n  }\n\n  /**\n   * Get the Screensets from the RaaS console interface\n   * @param {object} opts - Options object for the share function\n   * @param {string} [opts.screenSetIDs='Default-RegistrationLogin'] - Either a comma separated list or a JSON array of identifiers of the screen-sets to be retrieved.\n   * @param {string} [opts.include='Default-RegistrationLogin,html,css'] - A comma separated list of top level fields to include in the response. The default is: \"screenSetID,html,css\".\n   * @return {promise} Resolves an object with errorCode, errorMessage and the policies info.\n   * @see http://developers.gigya.com/display/GD/accounts.getScreenSets+JS\n   */\n  getScreenSets( opts ){\n    return new Promise( ( resolve, reject )=>{\n      let screenSetsProps = Object.assign( {\n        screenSetIDs: 'Default-RegistrationLogin',\n        include: 'Default-RegistrationLogin,html,css',\n        callback: ( response )=> this._cb( resolve, reject, response )\n      }, opts );\n\n      this.gigya.accounts.getScreenSets( screenSetsProps );\n    } );\n  }\n\n  /**\n   * Private callback function for the promises used in this class.\n   * @param {function} resolve - Function to fire as resolve.\n   * @param {function} reject - Function to fire as reject.\n   * @param {object} response - Teh response to use for either resolve or reject.\n   * @return {promise} Resolves or rejects a response object.\n   */\n  _cb( resolve, reject, response ){\n    if( response.status !== 'OK' ){\n      reject( { code: response.errorCode, error: response.errorMessage, details: response.errorDetails, status: response.status } );\n    }\n    resolve( response );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/es6-object-assign/src/index.js\n ** module id = 1\n ** module chunks = 0\n **/","// This file can be required in Browserify and Node.js for automatic polyfill\n// To use it:  require('es6-promise/auto');\n'use strict';\nmodule.exports = require('./').polyfill();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/es6-promise/auto.js\n ** module id = 2\n ** module chunks = 0\n **/","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.0.5\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n//# sourceMappingURL=es6-promise.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/es6-promise/dist/es6-promise.js\n ** module id = 3\n ** module chunks = 0\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}